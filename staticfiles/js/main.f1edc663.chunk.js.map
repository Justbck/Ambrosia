{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/header/header.component.js","components/footer/footer.component.js","components/recipe/recipe.jsx","components/recipies/recipes.jsx","screens/MainScreen.js","components/rating/rating.component.jsx","components/product/product.js","components/loader/loader.js","components/message/message.js","actions/productActions.js","components/SearchBox.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/login/formContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/checkout/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/NutritionistScreen.js","screens/BMIScreen.js","screens/BMRScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_CREATE_NOTE_REQUEST","USER_CREATE_NOTE_SUCCESS","USER_CREATE_NOTE_FAIL","USER_CREATE_NOTE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","orderCreate","order","orderDetails","orderItems","userUpdateProfile","userList","users","userDelete","userUpdate","userNoteCreate","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","setItem","stringify","response","detail","message","Header","useSelector","useDispatch","Navbar","class","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","name","Item","onClick","removeItem","isAdmin","Footer","Row","Col","lg","Recipe","image","calories","ingredients","totalWeight","url","healthLabels","Math","round","ingredient","text","src","alt","window","open","Recipies","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","fetch","json","hits","console","log","onSubmit","e","preventDefault","value","onChange","target","recipe","dishType","label","MainPage","Rating","color","style","Product","Card","_id","Img","Body","href","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","variant","children","Alert","listProducts","keyword","listProductDetails","SearchBox","setKeyword","history","useHistory","Form","push","location","pathname","Control","placeholder","HomeScreen","idx","sm","md","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","errorProduct","loadingProduct","loadingProductReview","errorProductReview","successProductReview","params","Image","fluid","ListGroup","description","countInStock","xs","Array","keys","Button","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","CartScreen","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","withRouter","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","checked","PlaceOrderScreen","itemsPrice","shippingPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","totalCalories","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","ProductEditScreen","setPrice","setImage","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","NutritionistScreen","emailjs","sendForm","then","result","reset","alert","cols","rows","BmiDisplay","props","alertClass","bmi","BMIScreen","heightFeet","heightInch","weight","handleHeightFeetChange","bind","handleHeightInchChange","handleWeightChange","calculateBMI","event","this","setState","bmiResults","results","getBMIResults","min","max","htmlFor","React","Component","BMRScreen","handleAgeChange","age","heightfeet","handleHeightInchesChange","heightinches","handleGenderChange","gender","handleActivityChange","activity","handleSystemChange","system","bmr","flag","heightInches","bmrCalc","ActCalc","resultAct","b","calculateBMR","calculateAct","App","path","component","MainScreen","exact","LoginScreen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f1edc663.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM' \r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'  \r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\n","export const USER_LOGIN_REQUEST = ' USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = ' USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = ' USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = ' USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = ' USER_LOGIN_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = ' USER_LOGIN_SUCCESS'\r\nexport const USER_REGISTER_FAIL = ' USER_LOGIN_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = ' USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = ' USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = ' USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = ' USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = ' USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = ' USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = ' USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = ' USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = ' USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = ' USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = ' USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = ' USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = ' USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = ' USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = ' USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = ' USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = ' USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = ' USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = ' USER_UPDATE_RESET'\r\n\r\nexport const USER_CREATE_NOTE_REQUEST = ' USER_CREATE_NOTE_REQUEST'\r\nexport const USER_CREATE_NOTE_SUCCESS = ' USER_CREATE_NOTE_SUCCESS'\r\nexport const USER_CREATE_NOTE_FAIL = ' USER_CREATE_NOTE_FAIL'\r\nexport const USER_CREATE_NOTE_RESET = ' USER_CREATE_NOTE_RESET'\r\n\r\n\r\n\r\n\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET'\r\n\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer, userNoteCreateReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers ({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userNoteCreate: userNoteCreateReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer, \r\n    orderList: orderListReducer,   \r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n        JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n        JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage,\r\n            shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = {products:[]}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading:true, products: []}\r\n            \r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading:false, products: action.payload }  \r\n            \r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading:false, error: action.payload }    \r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews: []} }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading:true, ...state}\r\n            \r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading:false, product: action.payload }  \r\n            \r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading:false, error: action.payload }    \r\n    \r\n        default:\r\n            return state\r\n    }\r\n}   \r\n\r\nexport const productDeleteReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading:true }\r\n            \r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading:false, success: true }  \r\n            \r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading:false, error: action.payload }    \r\n    \r\n        default:\r\n            return state\r\n    }\r\n}   \r\n\r\nexport const productCreateReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading:true }\r\n            \r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading:false, success: true, product: action.payload }  \r\n            \r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading:false, error: action.payload }    \r\n    \r\n        case PRODUCT_CREATE_RESET:\r\n            return {}    \r\n        \r\n        default:\r\n            return state\r\n    }\r\n}   \r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading:true }\r\n            \r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading:false, success: true, product: action.payload }  \r\n            \r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading:false, error: action.payload }    \r\n    \r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }    \r\n        \r\n        default:\r\n            return state\r\n    }\r\n}   \r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading:true }\r\n            \r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading:false, success: true }  \r\n            \r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading:false, error: action.payload }    \r\n    \r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}    \r\n        \r\n        default:\r\n            return state\r\n    }\r\n}   ","import { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x=> x.product === item.product)\r\n\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => \r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems:state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n    USER_CREATE_NOTE_REQUEST,\r\n    USER_CREATE_NOTE_SUCCESS,\r\n    USER_CREATE_NOTE_FAIL,\r\n    USER_CREATE_NOTE_RESET,\r\n\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {products:[]}, action) => {\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading:true}\r\n            \r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading:false, userInfo: action.payload }  \r\n            \r\n        case USER_LOGIN_FAIL:\r\n            return {loading:false, error: action.payload }    \r\n    \r\n        case USER_LOGOUT:\r\n            return {}    \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {products:[]}, action) => {\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading:true}\r\n            \r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading:false, userInfo: action.payload }  \r\n            \r\n        case USER_REGISTER_FAIL:\r\n            return {loading:false, error: action.payload }    \r\n    \r\n        case USER_LOGOUT:\r\n            return {}    \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading:true}\r\n            \r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading:false, user: action.payload }  \r\n            \r\n        case USER_DETAILS_FAIL:\r\n            return { loading:false, error: action.payload }\r\n            \r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }      \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading:true }\r\n            \r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading:false, success:true, userInfo: action.payload }  \r\n            \r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading:false, error: action.payload }      \r\n\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch(action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading:true }\r\n            \r\n        case USER_LIST_SUCCESS:\r\n            return { loading:false, users: action.payload }  \r\n            \r\n        case USER_LIST_FAIL:\r\n            return { loading:false, error: action.payload }      \r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDeleteReducer = (state = { }, action) => {\r\n    switch(action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading:true }\r\n            \r\n        case USER_DELETE_SUCCESS:\r\n            return { loading:false, success: true }  \r\n            \r\n        case USER_DELETE_FAIL:\r\n            return { loading:false, error: action.payload }      \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading:true }\r\n            \r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading:false, success: true }  \r\n            \r\n        case USER_UPDATE_FAIL:\r\n            return { loading:false, error: action.payload }      \r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }      \r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userNoteCreateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_CREATE_NOTE_REQUEST:\r\n            return { loading:true }\r\n            \r\n        case USER_CREATE_NOTE_SUCCESS:\r\n            return { loading:false, success: true }  \r\n            \r\n        case USER_CREATE_NOTE_FAIL:\r\n            return { loading:false, error: action.payload }    \r\n    \r\n        case USER_CREATE_NOTE_RESET:\r\n            return {}    \r\n        \r\n        default:\r\n            return state\r\n    }\r\n}   \r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n         \r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading:true, orderItems:[], shippingAddress: {} }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                order: action.payload\r\n            }\r\n         \r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true\r\n            }\r\n         \r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                orders: action.payload\r\n            }\r\n         \r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                orders: action.payload\r\n            }\r\n         \r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                success: true\r\n            }\r\n         \r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading:false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import axios from 'axios'\r\nimport { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n    USER_CREATE_NOTE_REQUEST,\r\n    USER_CREATE_NOTE_SUCCESS,\r\n    USER_CREATE_NOTE_FAIL,\r\n    USER_CREATE_NOTE_RESET,\r\n\r\n    \r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post (\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post (\r\n            '/api/users/register/',\r\n            { 'name': name , 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n            dispatch({\r\n                type: USER_REGISTER_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getUserDetails = ( id ) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get (\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n            dispatch({\r\n                type: USER_DETAILS_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = ( user ) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put (\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n            dispatch({\r\n                type: USER_UPDATE_PROFILE_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const listUsers = () => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get (\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n            dispatch({\r\n                type: USER_LIST_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete (\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n            dispatch({\r\n                type: USER_DELETE_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put (\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n            dispatch({\r\n                type: USER_UPDATE_SUCCESS,\r\n            })\r\n\r\n            \r\n            dispatch({\r\n                type: USER_DETAILS_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createUserNote = ( user, note ) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_CREATE_NOTE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post (\r\n            `/api/users/${user._id}/notes/`,\r\n            note,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_CREATE_NOTE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: USER_CREATE_NOTE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Navbar, Nav, Container, Row} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nimport { NavDropdown } from 'react-bootstrap';\r\nimport { logout } from '../../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n\r\n        <Navbar class = \"navbar\"  expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n        <LinkContainer to = '/'>\r\n            <Navbar.Brand class = \"brand\"> Ambrosia </Navbar.Brand>\r\n        </LinkContainer>   \r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          \r\n            \r\n            <Nav className=\"mr-auto\">\r\n\r\n            \r\n           <LinkContainer to = \"/offer\">\r\n                <Nav.Link><i className = \"fas fa-apple-alt\"></i> Offer </Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to = \"/cart\">\r\n                <Nav.Link><i className = \"fas fa-shopping-cart\"></i> Cart</Nav.Link>\r\n            </LinkContainer>\r\n\r\n          \r\n\r\n            {userInfo ? (\r\n                <NavDropdown title = {userInfo.name} id=\"username\">\r\n                \r\n                    <LinkContainer to = '/profile'>\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <LinkContainer to = '/recipies'>\r\n                        <NavDropdown.Item>Recipies</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n\r\n                    <LinkContainer to = '/bmr'>\r\n                        <NavDropdown.Item>BMR calculator</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <LinkContainer to = '/nutritionist'>\r\n                        <NavDropdown.Item>Nutritionist</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <NavDropdown.Item onClick = {logoutHandler}>Logout</NavDropdown.Item>\r\n                </NavDropdown>\r\n            ): (\r\n                <LinkContainer to ='/login'>\r\n                    <Nav.Link><i className = \"fas fa-user\"></i>Login</Nav.Link>\r\n                </LinkContainer>\r\n            )}\r\n\r\n            {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title = 'Admin' id=\"adminmenu\">\r\n                    <LinkContainer to = '/admin/userlist'>\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <LinkContainer to = '/admin/productlist'>\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                \r\n                    <LinkContainer to = '/admin/orderlist'>\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    \r\n                </NavDropdown>\r\n            )}\r\n\r\n\r\n           </Nav>\r\n        </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport {Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Footer() {\r\n    return (\r\n               \r\n        <div className = \"footer-wrapper\">\r\n      \r\n        <div className='footer'>\r\n            <Row>\r\n                <Col lg={4} className='footer-text'>\r\n                    <h1>CONTACT</h1>\r\n                    <p>ambrosia@gmail.com</p>\r\n                    <p>xxx xxx xxx</p>\r\n                </Col>\r\n                <Col lg={4} className='footer-text office' >\r\n                    <h1>Office hours</h1>\r\n                    <p>Monday-Friday<br/>8-16</p>\r\n                </Col>\r\n                <Col lg={4} className='footer-text  develop ' >\r\n                    <ion-icon name=\"logo-facebook\"></ion-icon>\r\n                    <ion-icon name=\"logo-instagram\"></ion-icon>\r\n                    <ion-icon name=\"logo-linkedin\"></ion-icon>\r\n                </Col>\r\n    \r\n            </Row> \r\n            <Row>\r\n                <Col lg={4} className='footer-text contact  '>\r\n                </Col>\r\n                <Col lg={4} className='footer-text contact '>\r\n                </Col>\r\n    \r\n                <Col lg={4} className='footer-text develop  '>      \r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col lg={9} className='footer-text contact '>\r\n                <p className=\"terms-of-use\">© 2021 Ambrosia | Terms of Use | Privacy Policy |  Copyright Policy |  Accessibility |  *See Sources</p>\r\n                <p className=\"website\">Website developed by <span class=\"name\">Justyna Bucko</span></p>\r\n            </Col>\r\n            </Row>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","\r\nimport React from 'react';\r\nimport {Route,Link, Switch} from 'react-router-dom';\r\n\r\nimport './recipe.styles.scss';\r\n\r\nconst Recipe = ({ title, calories, image, ingredients, totalWeight, url,healthLabels}) => {\r\n\r\n  function openTab() {\r\n    window.open(url);\r\n  }\r\n\r\n  function open() {\r\n    window.open(image);\r\n  }\r\n\r\n\r\n    return(\r\n      <div className=\"recipe\">\r\n        <h1>{title}</h1>\r\n        <p className=\"weight\">total weight: {Math.round(totalWeight)} g  </p>\r\n        <p class=\"i-title\">ingridients</p>\r\n        <ol className = 'list'>\r\n          {ingredients.map(ingredient => (\r\n            <li className = \"recipe-text\">\r\n              {ingredient.text}      \r\n            </li>\r\n          ))}\r\n        </ol>\r\n\r\n\r\n        <div className = 'health-labels'>\r\n       \r\n      <div className ='image-wrapper'>\r\n        <img src={image} alt=\"\"  onClick={openTab}/>\r\n      </div>\r\n      </div>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default Recipe;","import React, { useEffect, useState }  from 'react';\r\nimport { Container, Row, Col, Form, Button} from 'react-bootstrap';\r\n\r\nimport Recipe from '../../components/recipe/recipe';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nimport './recipies.styles.scss';\r\n\r\n\r\n\r\n\r\nconst Recipies = () => {\r\n\r\n    const APP_ID = \"e8ee2b6a\";\r\n    const APP_KEY = \"9e2875f6b5f51c962b2fb7898af7cfe9\";\r\n    \r\n    const [recipes, setRecipes] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [query, setQuery] = useState('avocado');\r\n\r\n  \r\n    useEffect (() => { getRecipes() }, [query])  // run every time when the element in [] changes, if empty [], only run once it is mounted\r\n  \r\n    const getRecipes = async () => {\r\n      const response = await fetch(\r\n        `https://api.edamam.com/search?q=${query}&avocado&app_id=${APP_ID}&app_key=${APP_KEY}`\r\n      )\r\n      const data = await response.json();  // use `await` or `.then` every time use promit\r\n      setRecipes(data.hits);\r\n      console.log(data.hits)\r\n    }\r\n  \r\n\r\n    const updateSearch = e => {\r\n        setSearch(e.target.value);\r\n      }\r\n    \r\n      const getSearch = e => {\r\n        e.preventDefault();\r\n        setQuery(search);\r\n      }\r\n    \r\n      return(\r\n\r\n        \r\n        \r\n        <div className=\"recipe-page\"        >\r\n          <div className = \"search-header\">\r\n            <h1 className = \"look-for\"> Look for recipe </h1>\r\n          </div>\r\n          <Container>\r\n          <form className=\"search-form \" onSubmit={getSearch}>\r\n            <input className=\"search-bar p-2\" type=\"text\" value={search} onChange={updateSearch} />\r\n            <button className=\"search-button button\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          </Container>\r\n\r\n          <div className=\"Recipes\">\r\n            {recipes.map(recipe => (\r\n              <Recipe\r\n                dishType = {recipe.recipe.dishType}\r\n                totalWeight={recipe.recipe.totalWeight}\r\n                key={recipe.recipe.label}\r\n                title={recipe.recipe.label}\r\n                calories={recipe.recipe.calories}\r\n                image={recipe.recipe.image} \r\n                ingredients={recipe.recipe.ingredients}\r\n                url = {recipe.recipe.url}\r\n                healthLabels = {recipe.recipe.healthLabels}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n     \r\n      );\r\n\r\n}\r\n\r\n\r\nexport default Recipies;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction MainPage() {\r\n\r\n    \r\n\r\n    return(\r\n       <Container>\r\n            <Row>\r\n                <Col>\r\n                    <div className = \"image1\"></div>\r\n                </Col>\r\n                <Col>\r\n                    <div className = \"title\">\r\n                        <h1>Ambrosia</h1>\r\n                        <p>organic food catering</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n            <Col lg={6} className='philosophy-section'>\r\n                <h1 className=' philosophy'>Our philosophy</h1>\r\n                <ul className =' philosophy-list'>\r\n                    <li>Your<span className='name'> body </span> reflects what you eat</li>\r\n                    <li>Your <span className='name'>soul  </span>reflects what you are nutrited with </li>\r\n                    <li>Your <span className='name'>mind</span> and thoughts is feed with what you consume</li>\r\n                    <li>Your <span className='name'>feelings </span>and <span className='name'></span>actions depend on what you serve yourself</li>\r\n                </ul>\r\n\r\n                <h2 className='philosophy-text' >Hi there! We want to help you achieve a higher level of health than you ever thought possible. Order you meals today and get get them delivered right do your door tommorow in the morning.</h2>\r\n            </Col>\r\n\r\n            <Col lg={6}>\r\n                <div className='karma-image'></div>\r\n            </Col>\r\n        </Row>  \r\n\r\n        <Row>\r\n            <div className ='menu'>\r\n                <p className='menu-title-text '>\r\n                    Save time and order meals for the whole in advance.\r\n                    Get your favorite dishes in the healthiest version that is possible.\r\n                    Nutrish and take care of your body. <span>Achive great things !</span>\r\n                </p>\r\n            </div>\r\n        </Row>\r\n\r\n        <Row>\r\n            <Col>\r\n              <div className = \"bag-image\">\r\n                      <h1>See you soon! </h1>\r\n              </div>\r\n            </Col>\r\n        </Row>\r\n       </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className = \"rating\">\r\n            <span>\r\n                <i style = {{ color }} className = {\r\n                    value >= 1 \r\n                    ? 'fas fa-heart'\r\n                    : value >= 0.5\r\n                        ? 'far fa-heart'\r\n                        : 'fas fa-heart'\r\n                }>  \r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style = {{ color }} className = {\r\n                    value >= 2 \r\n                    ? 'fas fa-heart'\r\n                    : value >= 0.5\r\n                        ? 'far fa-heart'\r\n                        : 'fas fa-heart'\r\n                }>  \r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style = {{ color }} className = {\r\n                    value >= 3 \r\n                    ? 'fas fa-heart'\r\n                    : value >= 0.5\r\n                        ? 'far fa-heart'\r\n                        : 'fas fa-heart'\r\n                }>  \r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style = {{ color }} className = {\r\n                    value >= 4 \r\n                    ? 'fas fa-heart'\r\n                    : value >= 0.5\r\n                        ? 'far fa-heart'\r\n                        : 'fas fa-heart'\r\n                }>  \r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style = {{ color }} className = {\r\n                    value >= 5 \r\n                    ? 'fas fa-heart'\r\n                    : value >= 0.5\r\n                        ? 'far fa-heart'\r\n                        : 'fas fa-heart'\r\n                        \r\n                }>  \r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating;","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Rating from '../rating/rating.component';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className = \"my-3 p-3 rounded\">\r\n            <Link to = {`/product/${product._id}`}>\r\n                <Card.Img src = {product.image}/>\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link href = {`/product/${product._id}`}>\r\n                    <Card.Title as = \"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as = \"div\">\r\n                    <div className = \"my-3\">\r\n                        {product.rating} from {product.numReviews} reviews\r\n                        <Rating value = {product.rating} text = {`${product.numReviews} reviews`} color = {'#CD5C5C'}/>\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text as = \"h3\">\r\n                    £{[product.price]}\r\n                </Card.Text>\r\n\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader() {\r\n    return(\r\n        <Spinner\r\n            animation = \"border\"\r\n            role = 'status'\r\n            style = {{\r\n                height: '50px',\r\n                width: '50px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n        \r\n        <span className = 'sr-only'>Loading..</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant = {variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message;","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    \r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: PRODUCT_LIST_REQUEST})\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete (\r\n            `/api/products/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = (id) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post (\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put (\r\n            `/api/products/update/${product._id}`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_SUCCESS, \r\n            payload: data \r\n        })\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = ( productId, review ) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post (\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    let history = useHistory()\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword) {\r\n            history.push(`offer/?keyword=${keyword}`)\r\n        }\r\n        else{\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit = {submitHandler}  >\r\n            <Form.Control\r\n                type = 'text'\r\n                name = 'q'\r\n                onChange = { (e) => setKeyword(e.target.value)}\r\n                placeholder = 'Search for product'\r\n            >\r\n            </Form.Control>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/product/product';\r\nimport Loader from '../components/loader/loader'\r\nimport Message from '../components/message/message';\r\nimport { listProducts } from '../actions/productActions'\r\nimport SearchBox from '../components/SearchBox';\r\n\r\n\r\nfunction HomeScreen({history}) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products} = productList\r\n\r\n\r\n    let keyword = history.location.search\r\n    console.log(keyword)\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className = \"search-header menu-screen\">\r\n                <h1 className = \"look-for\"> ORDER DIET </h1>\r\n            </div>\r\n                <h4 className = 'text-center'> 3 healthy & delicious meals + snack </h4>\r\n                <p className = 'text-center'>*example photos</p>\r\n            <Row>\r\n                {products\r\n                    .filter((item,idx) => idx>40)\r\n                    .map(product => (\r\n                    <Col key = {product._id} sm = {12} md= {6} lg= {4} xl = {3}>\r\n                        <Product product = {product}/>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n\r\n            <div className = \"search-header menu-screen\">\r\n                <h1 className = \"look-for\"> COMPOSE YOUR OWN </h1>\r\n            </div>\r\n\r\n            <SearchBox/>\r\n\r\n            {loading ? <Loader/>\r\n                : error ? <Message variant = 'danger'>{error}</Message>\r\n                    :\r\n                    <Row>\r\n                        {products\r\n                            .filter((item,idx) => idx<40)\r\n                            .map(product => (\r\n                            <Col key = {product._id} sm = {12} md= {6} lg= {4} xl = {3}>\r\n                                <Product product = {product}/>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/rating/rating.component';\r\nimport { listProducts } from '../actions/productActions'\r\nimport Product from '../components/product/product';\r\nimport Loader from '../components/loader/loader';\r\nimport Message from '../components/message/message';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions';\r\nimport { ListGroupItem } from 'react-bootstrap';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductScreen({ match, history }) {\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {errorProduct, loadingProduct, products} = productList\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productDetails \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin \r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {loading: loadingProductReview, error: errorProductReview, success: successProductReview } = productReviewCreate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(successProductReview){\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProducts)\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n                rating,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n\r\n  \r\n    return (\r\n        <div>\r\n            <Link to = '/offer' className = 'btn btn-light my-3' >Go Back</Link>\r\n            {loading ?\r\n                <Loader/>\r\n                : error\r\n                    ? <Message variant = 'danger'>{error}</Message>\r\n                :(\r\n                    <div>\r\n                    <Row>\r\n            <Col md = {6}>\r\n                <Image src = {product.image} alt = {product.name} fluid/>\r\n            </Col>\r\n\r\n            <Col md = {3}>\r\n\r\n            <ListGroup variant = \"flush\">\r\n\r\n                <ListGroup.Item>\r\n                    <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <Rating value = {product.rating} text = {`${product.numReviews} reviews`} color = {'#CD5C5C'}/>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  Price: £{product.price}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                  Calories: {product.calories}\r\n              </ListGroup.Item>\r\n\r\n            </ListGroup>\r\n            </Col>\r\n\r\n            <Col md = {3}>\r\n                <Card>\r\n                    <ListGroup variant = \"flush\">\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Price: </Col>\r\n                                <Col>\r\n                                    <strong> £{product.price}</strong>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Status: </Col>\r\n                                <Col>\r\n                                    {product.countInStock > 0 ? 'Available today!' : 'Available from tommorow'}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        {product.countInStock > 0 && (\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Qty</Col>\r\n                                    <Col xs = 'auto' className = 'my-1'>\r\n                                        <Form.Control\r\n                                            as = \"select\"\r\n                                            value = {qty}\r\n                                            onChange = {(e) => setQty(e.target.value)}\r\n                                        >\r\n                                            {\r\n                                                [...Array(product.countInStock).keys()].map((x) => (\r\n                                                    <option key = {x + 1} value = {x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ) }\r\n\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                onClick = {addToCartHandler}\r\n                                className = 'btn-block button' \r\n                                type='button'\r\n                                disabled = {product.countInStock === 0}\r\n                            >\r\n                            Order\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n\r\n        <Row>\r\n            <Col md={12}>\r\n                <h4 className = \"mt-5\">Reviews</h4>\r\n                {product.reviews.length === 0 && <Message variant = 'info'>No Reviews</Message>}\r\n                <ListGroup variant = 'flush'>\r\n                    {product.reviews.map((review) => (\r\n                        <ListGroup.Item key = {review._id}>\r\n                            <strong>{review.name}</strong>\r\n                            <Rating value = {review.rating} color='#CD5C5C'/>\r\n                            <p>{review.createdAt.substring(0,10)}</p>\r\n                            <p>{review.comment}</p>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n\r\n                    <ListGroup.Item>\r\n                        <h4>Write a review</h4>\r\n                        {loadingProductReview && <Loader/>}\r\n                        {successProductReview && <Message variant = 'success'>Review Submitted</Message>}\r\n                        {errorProductReview && <Message variant = 'danger'> {errorProductReview} </Message>}\r\n                        {userInfo ? (\r\n                            <Form onSubmit = {submitHandler}>\r\n                \r\n                                    <Form.Control\r\n                                        as='select'\r\n                                        value={rating}\r\n                                        onChange={(e) => setRating(e.target.value)}\r\n                                    >\r\n\r\n                                        <option value = ''>Select...</option>\r\n                                        <option value = '1'>1</option>\r\n                                        <option value = '2'>2</option>\r\n                                        <option value = '3'>3</option>\r\n                                        <option value = '4'>4</option>\r\n                                        <option value = '5'>5</option>\r\n                                    \r\n                                    </Form.Control>\r\n\r\n                                    <Form.Group controlId = 'comment'>\r\n                                        <Form.Label>Review</Form.Label>\r\n                                        <Form.Control\r\n                                            as='textarea'\r\n                                            row='5'\r\n                                            value={comment}\r\n                                            onChange={(e) => setComment(e.target.value)}\r\n                                        >      \r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Button\r\n                                        disabled = {loadingProductReview}\r\n                                        type = 'submit'\r\n                                        variant = 'primary'\r\n                                        className='button'\r\n                                    >\r\n                                    Submit\r\n                                    </Button>\r\n                            \r\n                            </Form>\r\n                        ) : (\r\n                            <Message variant = 'info'>Please <Link to = '/login'>login</Link> to write a review </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </ListGroup>\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n          <Row className = 'mt-5'>\r\n          <p>You may also like</p>\r\n          {loading ? <Loader/>\r\n            : error ? <Message variant = 'danger'>{error}</Message>\r\n                :\r\n                <Row>\r\n                    {products\r\n                        .filter((item,idx) => idx<4)\r\n                        .map(product => (\r\n                        <Col key = {product._id} sm = {12} md= {6} lg= {4} xl = {3}>\r\n                            <Product product = {product}/>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n        }\r\n\r\n            </Row>\r\n        </div>\r\n            )\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen;","import axios from 'axios';\r\nimport { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async(dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch ({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => ( dispatch, getState ) => {\r\n    dispatch ({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => ( dispatch ) => {\r\n    dispatch ({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => ( dispatch ) => {\r\n    dispatch ({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Button, Card ,Form} from 'react-bootstrap'\r\nimport  Message  from '../components/message/message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport { ListGroupItem } from 'react-bootstrap'\r\n\r\n\r\nfunction CartScreen({ match, location, history }){\r\n\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    },[dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n            <Col md = {8}>\r\n                <h1>Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant = 'info'>\r\n                        Your cart is empty <Link to = '/'> Go Back </Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant = 'flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key = {item.product}>\r\n                                <Row>\r\n                                    <Col md = {2}>\r\n                                        <Image src = {item.image} alt = {item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md = {3}>\r\n                                        <Link to = {`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md = {2}>\r\n                                            £{item.price}\r\n                                    </Col>\r\n\r\n                                    <Col md = {3}>\r\n                                        <Form.Control\r\n                                            as = \"select\"\r\n                                            value = {item.qty}\r\n                                            onChange = {(e) => dispatch(addToCart(item.product,Number(e.target.value)))}\r\n                                        >\r\n                                        {\r\n                                            [...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key = {x + 1} value = {x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))\r\n                                        }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md = {1}>\r\n                                        <Button\r\n                                            type = 'button'\r\n                                            variant = 'light'\r\n                                            onClick = {() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className = 'fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md = {4}>\r\n                <Card className='subtotal'>\r\n                    <ListGroup variant = 'flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Total ({cartItems.reduce((acc, item) => acc + item.qty, 0 )}) items </h2>\r\n                            £{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type = 'button'\r\n                            className = 'btn-block'\r\n                            disabled = {cartItems.length === 0}\r\n                            onClick = {checkoutHandler}\r\n                        >\r\n                        Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n      </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen;","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }){\r\n\r\n    return (\r\n        <Container className='login text-center mt-3'>\r\n            <Row className = \"justify-content-md-center\">\r\n                <Col xs = {12} md = {6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/loader/loader'\r\nimport Message from '../components/message/message'\r\nimport FormContainer from '../components/login/formContainer'\r\n\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\nfunction LoginScreen( { location, history }) {\r\n    const [ email, setEmail ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    \r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant = 'danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit = {submitHandler}>\r\n\r\n                <Form.Group controlId = 'email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type ='email'\r\n                        placeholder = 'Enter Email'\r\n                        value = {email}\r\n                        onChange = {(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId = 'password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type ='password'\r\n                        placeholder = 'Enter Password'\r\n                        value = {password}\r\n                        onChange = {(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button className='button' type = 'submit' variant = 'primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className = 'py-3'>\r\n                <Col>\r\n                    Don't have an account ? <Link\r\n                    to = {redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                    Sign up\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginScreen);","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/loader/loader'\r\nimport Message from '../components/message/message'\r\nimport FormContainer from '../components/login/formContainer'\r\n\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\nfunction RegisterScreen({ location, history }){\r\n\r\n    const [ name, setName ] = useState('')\r\n    const [ email, setEmail ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n    const [ confirmPassword, setConfirmPassword ] = useState('')\r\n    const [ message, setMessage ] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant = 'danger'>{message}</Message>}\r\n            {error && <Message variant = 'danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit = {submitHandler}>\r\n            \r\n            <Form.Group controlId = 'name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type ='name'\r\n                    placeholder = 'Enter Name'\r\n                    value = {name}\r\n                    onChange = {(e) => setName(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n                 \r\n            <Form.Group controlId = 'email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type ='email'\r\n                    placeholder = 'Enter Email'\r\n                    value = {email}\r\n                    onChange = {(e) => setEmail(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId = 'password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type ='password'\r\n                        placeholder = 'Enter Password'\r\n                        value = {password}\r\n                        onChange = {(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId = 'passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type ='password'\r\n                        placeholder = 'Confirm Password'\r\n                        value = {confirmPassword}\r\n                        onChange = {(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type = 'submit' variant = 'primary'>Register</Button>\r\n\r\n            </Form>\r\n\r\n            <Row className = 'py-3'>\r\n            <Col>\r\n                Have an Account ? <Link\r\n                to = {redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                Sign in\r\n                </Link>\r\n            </Col>\r\n        </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table  } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/loader/loader'\r\nimport Message from '../components/message/message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    \r\n    const [ name, setName ] = useState('')\r\n    const [ email, setEmail ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n    const [ confirmPassword, setConfirmPassword ] = useState('')\r\n    const [ message, setMessage ] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(!user || !user.name || success || userInfo._id !== user._id ){\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success ])\r\n    \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password,\r\n            }))\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        <div className = \"search-header\">\r\n        <h1 className = \"look-for\"> My profle </h1>\r\n      </div>\r\n        <Row>\r\n            <Col md = {3}>\r\n                {message && <Message variant = 'danger'>{message}</Message>}\r\n                {error && <Message variant = 'danger'>{error}</Message>}\r\n                {loading && <Loader/>}\r\n                <Form onSubmit = {submitHandler}>\r\n                \r\n                <Form.Group controlId = 'name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type ='name'\r\n                        placeholder = 'Enter Name'\r\n                        value = {name}\r\n                        onChange = {(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n    \r\n                     \r\n                <Form.Group controlId = 'email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type ='email'\r\n                        placeholder = 'Enter Email'\r\n                        value = {email}\r\n                        onChange = {(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n    \r\n                <Form.Group controlId = 'password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type ='password'\r\n                            placeholder = 'Enter Password'\r\n                            value = {password}\r\n                            onChange = {(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                </Form.Group>\r\n    \r\n                <Form.Group controlId = 'passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type ='password'\r\n                            placeholder = 'Confirm Password'\r\n                            value = {confirmPassword}\r\n                            onChange = {(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                </Form.Group>\r\n    \r\n                <Button type = 'submit' variant = 'primary'>Update</Button>\r\n    \r\n                </Form>\r\n            </Col>\r\n            <Col md = {9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader/>\r\n                ) : errorOrders ? (\r\n                    <Message variant = 'danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className = 'table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Id</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                \r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key = {order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0,10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                   \r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className = 'fas fa-times' ></i>\r\n                                    )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to = {`/order/${order._id}`}>\r\n                                            <Button className = 'btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen;","import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS, \r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const createOrder = ( order ) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post (\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n            \r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = ( id ) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get (\r\n            `/api/orders/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = ( id, paymentResult ) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put (\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get (\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get (\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = ( order ) => async ( dispatch, getState ) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put (\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Nav } from 'react-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4}) {\r\n\r\n    return(\r\n        <Nav className = 'justify-content-center mb-4 steps'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to = '/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to = '/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to = '/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to = '/placeorder'>\r\n                        <Nav.Link>Place Order!</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps;","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/login/formContainer'\r\nimport CheckoutSteps from '../components/checkout/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport Message from '../components/message/message'\r\n\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector( state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const [ address, setAddress ] = useState(shippingAddress.address)\r\n    const [ city, setCity ] = useState(shippingAddress.city)\r\n    const [ postalCode, setPostalCode ] = useState(shippingAddress.postalCode)\r\n    const [ country, setCountry ] = useState(shippingAddress.country)\r\n    const [ message, setMessage ] = useState('')\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(city !== 'London') {\r\n            setMessage('We deliver only to London!')\r\n        } else {\r\n            dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n            history.push('/payment')  \r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            {message && <Message variant = 'danger'>{message}</Message>}\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit = {submitHandler}>\r\n\r\n                <Form.Group controlId = 'address'>\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type ='text'\r\n                    placeholder = 'Enter Address'\r\n                    value = {address ? address : ''}\r\n                    onChange = {(e) => setAddress(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n                </Form.Group>\r\n\r\n                \r\n                <Form.Group controlId = 'city'>\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type ='text'\r\n                    placeholder = 'Enter City'\r\n                    value = {city ? city : ''}\r\n                    onChange = {(e) => setCity(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n                </Form.Group>\r\n\r\n                \r\n                <Form.Group controlId = 'postalCode'>\r\n                <Form.Label>Postal Code</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type ='text'\r\n                    placeholder = 'Enter Postal Code'\r\n                    value = {postalCode ? postalCode : ''}\r\n                    onChange = {(e) => setPostalCode(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId = 'country'>\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type ='text'\r\n                    placeholder = 'Enter Country'\r\n                    value = {country ? country : ''}\r\n                    onChange = {(e) => setCountry(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button class = 'button' type = 'submit' variant = 'primary'>\r\n                Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/login/formContainer'\r\nimport CheckoutSteps from '../components/checkout/CheckoutSteps';\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\n\r\nfunction PaymentScreen({ history }){\r\n    \r\n    \r\n    const cart = useSelector( state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return(\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n                <Form onSubmit = {submitHandler}>\r\n                    <Form.Group>\r\n                        <Form.Label as = 'legend'> Select Method </Form.Label>\r\n                        <Col>\r\n                            <Form.Check\r\n                                type = 'radio'\r\n                                label = 'Paypal or Credit Card'\r\n                                id = 'paypal'\r\n                                name = 'paymentMethod'\r\n                                checked\r\n                                onChange = {(e) => setPaymentMethod(e.target.value) }\r\n                            >\r\n                            \r\n                            </Form.Check>\r\n                        </Col>\r\n\r\n                    </Form.Group>\r\n                    <Button type = 'submit' variant = 'primary'>\r\n                        Continue\r\n                    </Button>\r\n                </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default PaymentScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/message/message'\r\nimport CheckoutSteps from '../components/checkout/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const dispatch = useDispatch()\r\n    const { order, error, success } = orderCreate\r\n\r\n \r\n    \r\n    const cart = useSelector(state => state.cart)\r\n    \r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0:5).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice)).toFixed(2)\r\n    \r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(success) {\r\n             history.push(`/order/${order._id}`)\r\n            dispatch({type: ORDER_CREATE_RESET})\r\n        }\r\n    }, [ success, history ])\r\n\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md = {8}>\r\n                    <ListGroup variant = 'flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {' '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method:</strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            <p>\r\n                                {cart.cartItems.length === 0 ? <Message variant = 'info'>\r\n                                Your cart is empty\r\n                                </Message> : (\r\n                                    <ListGroup variant = 'flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key = {index}> \r\n                                                <Row>\r\n                                                    <Col md = {1} >\r\n                                                        <Image src= {item.image} alt ={item.name} fluid rounded />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to = {`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md = {4}>\r\n                                                        {item.qty} X ${item.price} = £{(item.qty * item.price).toFixed(2)}  \r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Delivery date: </h2>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md = {4}>\r\n                    <Card>\r\n                        <ListGroup variant = 'flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items: </Col>\r\n                                    <Col>£{cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping: </Col>\r\n                                    <Col>£{cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total: </Col>\r\n                                <Col>£{cart.totalPrice}</Col>\r\n                            </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant = 'danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n\r\n\r\n                            <ListGroup.Item>\r\n                            <Button\r\n\r\n                                type = 'button'\r\n                                className = 'btn-block button'\r\n                                disabled = {cart.cartItems === 0}\r\n                                onClick = {placeOrder}\r\n                            >\r\n                                Place Order\r\n                            </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/message/message'\r\nimport Loader from '../components/loader/loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET  } from '../constants/orderConstants'\r\n\r\n\r\n\r\nfunction OrderScreen({ match, history }) {\r\n\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [ sdkReady, setSdkReady ] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {  loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {  loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n        order.totalCalories = order.orderItems.reduce((acc, item) => acc + item.calories,0)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AfxvpsjSFQRjzNhExJaSSkzdaA17Geugj29T8LatmfQhZkQGibbTfd5iv5z46ScNLyTq2P-JpoCh8Tla'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    \r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader/>\r\n    ) : error ? (\r\n        <Message variant = 'danger'> {error} </Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order: {order._id} </h1>\r\n            <Row>\r\n                <Col md = {8}>\r\n                    <ListGroup variant = 'flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href = {`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {' '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n\r\n\r\n                            {order.isDelivered ? (\r\n                                <Message variant = 'success'>Delivered on {order.deliveredAt.substring(0,10)} </Message>\r\n                            ) : (\r\n                                <Message variant = 'warning'>Not Delivered </Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method:</strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n\r\n\r\n                            {order.isPaid ? (\r\n                                <Message variant = 'success'>Paid on {order.paidAt.substring(0,10)} </Message>\r\n                            ) : (\r\n                                <Message variant = 'warning'>Not paid</Message>\r\n                            )}\r\n\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            <p>\r\n                                {order.orderItems.length === 0 ? <Message variant = 'info'>\r\n                                Your order is empty\r\n                                </Message> : (\r\n                                    <ListGroup variant = 'flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key = {index}> \r\n                                                <Row>\r\n                                                    <Col md = {1} >\r\n                                                        <Image src= {item.image} alt ={item.name} fluid rounded />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to = {`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md = {4}>\r\n                                                        {item.qty} X ${item.price} = £{(item.qty * item.price).toFixed(2)}  \r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <p>Calories: {item.calories}</p>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            </p>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        \r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md = {4}>\r\n                    <Card>\r\n                        <ListGroup variant = 'flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items: </Col>\r\n                                    <Col>£{order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping: </Col>\r\n                                    <Col>£{order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total: </Col>\r\n                                <Col>£{order.totalPrice}</Col>\r\n                            </Row>\r\n                            </ListGroup.Item>\r\n\r\n                           \r\n\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader/>}\r\n                                    \r\n                                    {!sdkReady ? (\r\n                                        <Loader/>  \r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount = {order.totalPrice}\r\n                                            onSuccess = {successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                        </ListGroup>\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type = 'button'\r\n                                    className = 'btn btn-block'\r\n                                    onClick = {deliverHandler}\r\n                                >\r\n                                    Mark as Delivered\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen;","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/loader/loader'\r\nimport Message from '../components/message/message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n \r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo ])\r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className = \"search-header admin-screen\">\r\n        <h1 className = \"look-for\"> Users </h1>\r\n      </div>\r\n            {loading\r\n                ? ( <Loader/> )\r\n                : error\r\n                    ? (<Message variant = 'danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className= 'table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Admin</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key = {user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>\r\n                                        \r\n                                        {user.isAdmin ? (\r\n                                            <i className = 'fas fa-check' style = {{ color: 'green'}} ></i>\r\n                                        ) : (\r\n                                            <i className = 'fas fa-times' style = {{ color: 'red'}} ></i>\r\n                                        )}\r\n\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to = {`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant = 'light' className = 'btn-sm'>\r\n                                                    <i className = 'fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                                <Button variant = 'light' className = 'btn-sm' onClick= {() => deleteHandler(user._id)}>\r\n                                                    <i className = 'fas fa-trash'></i>\r\n                                                </Button>\r\n                                        </td>\r\n\r\n\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/loader/loader'\r\nimport Message from '../components/message/message'\r\nimport FormContainer from '../components/login/formContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET, USER_UPDATE_RESET} from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }){\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName ] = useState('')\r\n    const [email, setEmail ] = useState('')\r\n    const [isAdmin, setIsAdmin ] = useState(false)\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate  } = userUpdate\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate) {\r\n            dispatch({type:USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n    \r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return( \r\n        <div>\r\n            <Link to ='/admin/userlist'> Go Back </Link>\r\n\r\n        <FormContainer>\r\n        <h1>Edit user</h1>\r\n        {loadingUpdate && <Loader/>}\r\n        {errorUpdate && <Message variant = 'danger'>{errorUpdate}</Message>}\r\n\r\n        {loading ? <Loader/> : error ? <Message variant = 'danger'>{error}</Message>\r\n            : (\r\n                <Form onSubmit = {submitHandler}>\r\n        \r\n                <Form.Group controlId = 'name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type ='name'\r\n                        placeholder = 'Enter Name'\r\n                        value = {name}\r\n                        onChange = {(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n        \r\n                     \r\n                <Form.Group controlId = 'email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type ='email'\r\n                        placeholder = 'Enter Email'\r\n                        value = {email}\r\n                        onChange = {(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n        \r\n                <Form.Group controlId = 'isadmin'>\r\n                        <Form.Check\r\n                            type ='checkbox'\r\n                            label = 'Is Admin?'\r\n                            checked = {isAdmin}\r\n                            onChange = {(e) => setIsAdmin(e.target.checked)}\r\n                        >\r\n                        </Form.Check>\r\n                </Form.Group>\r\n        \r\n        \r\n                <Button type = 'submit' variant = 'primary'>Update</Button>\r\n        \r\n                </Form>\r\n            )}\r\n\r\n    </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen;","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/loader/loader'\r\nimport Message from '../components/message/message'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n \r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n        \r\n        if (!userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts())\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successCreate, createdProduct, successDelete ])\r\n\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n        <div className = \"search-header admin-screen\">\r\n        <h1 className = \"look-for\"> Products </h1>\r\n      </div>\r\n            <Row className = 'align-items-center'>\r\n\r\n                <Col className = 'text-right'>\r\n                    <Button className = 'my-3 button' onClick = {createProductHandler}>\r\n                        <i className = 'fas fa-plus mr-3'> </i>Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant = 'danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader/>}\r\n            {errorCreate && <Message variant = 'danger'>{errorCreate}</Message>}\r\n\r\n\r\n            {loading\r\n                ? ( <Loader/> )\r\n                : error\r\n                    ? (<Message variant = 'danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className= 'table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Price</th>\r\n                                    <th>Category</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {products.map(product => (\r\n                                    <tr key = {product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>£{product.price}</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>\r\n                                            <LinkContainer to = {`/admin/product/${product._id}/edit`}>\r\n                                                <Button variant = 'light' className = 'btn-sm'>\r\n                                                    <i className = 'fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                                <Button variant = 'light' className = 'btn-sm' onClick= {() => deleteHandler(product._id)}>\r\n                                                    <i className = 'fas fa-trash'></i>\r\n                                                </Button>\r\n                                        </td>\r\n\r\n\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen;","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/loader/loader'\r\nimport Message from '../components/message/message'\r\nimport FormContainer from '../components/login/formContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\n\r\nimport { USER_UPDATE_PROFILE_RESET, USER_UPDATE_RESET} from '../constants/userConstants'\r\nimport { PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\nfunction ProductEditScreen({ match, history }){\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName ] = useState('')\r\n    const [price, setPrice ] = useState(0)\r\n    const [image, setImage ] = useState('')\r\n    const [category, setCategory ] = useState('')\r\n    const [countInStock, setCountInStock ] = useState(0)\r\n    const [description, setDescription ] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate){\r\n            dispatch({ type: PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n    \r\n\r\n    const uploadFileHandler = async(e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id',productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch(error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            category,\r\n            countInStock,\r\n            description,\r\n        }))\r\n    }\r\n\r\n\r\n    return( \r\n        <div>\r\n            <Link to ='/admin/productlist'> Go Back </Link>\r\n\r\n        <FormContainer>\r\n        <h1>Edit Product</h1>\r\n\r\n        {loadingUpdate && <Loader/>}\r\n        {errorUpdate && <Message variant = 'danger'>{errorUpdate}</Message>}\r\n\r\n        {loading ? <Loader/> : error ? <Message variant = 'danger'>{error}</Message>\r\n            : (\r\n                <Form onSubmit = {submitHandler}>\r\n        \r\n                <Form.Group controlId = 'name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type ='name'\r\n                        placeholder = 'Enter Name'\r\n                        value = {name}\r\n                        onChange = {(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId = 'price'>\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control\r\n                        type ='number'\r\n                        placeholder = 'Enter Price'\r\n                        value = {price}\r\n                        onChange = {(e) => setPrice(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                \r\n                <Form.Group controlId = 'image'>\r\n                    <Form.Label>Image</Form.Label>\r\n                    <Form.Control\r\n                        type ='text'\r\n                        placeholder = 'Enter Image'\r\n                        value = {image}\r\n                        onChange = {(e) => setImage(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                        <Form.File\r\n                            id = 'image-file'\r\n                            label = 'choose file'\r\n                            custom\r\n                            onChange = {uploadFileHandler}\r\n                        >\r\n                        </Form.File>\r\n                        {uploading && <Loader/>}\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId = 'countinstock'>\r\n                    <Form.Label>Stock</Form.Label>\r\n                    <Form.Control\r\n                        type ='number'\r\n                        placeholder = 'Enter Stock'\r\n                        value = {countInStock}\r\n                        onChange = {(e) => setCountInStock(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId = 'category'>\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control\r\n                        type ='text'\r\n                        placeholder = 'Enter Category'\r\n                        value = {category}\r\n                        onChange = {(e) => setCategory(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId = 'description'>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                    type ='text'\r\n                    placeholder = 'Enter Description'\r\n                    value = {description}\r\n                    onChange = {(e) => setDescription(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n            </Form.Group>\r\n    \r\n        \r\n                \r\n        \r\n                <Button className = 'button' type = 'submit' variant = 'primary'>Update</Button>\r\n        \r\n                </Form>\r\n            )}\r\n\r\n    </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen;","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/loader/loader'\r\nimport Message from '../components/message/message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n \r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo ])\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className = \"search-header admin-screen\">\r\n        <h1 className = \"look-for\"> Orders </h1>\r\n      </div>\r\n            {loading\r\n                ? ( <Loader/> )\r\n                : error\r\n                    ? (<Message variant = 'danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className= 'table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>User</th>\r\n                                    <th>Date</th>\r\n                                    <th>Total</th>\r\n                                    <th>Paid</th>\r\n                                    <th>Delivered</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key = {order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0,10)}</td>\r\n                                        <td>£ {order.totalPrice}</td>\r\n                                        <td>\r\n                                        {order.isPaid ? (\r\n                                           order.paidAt.substring(0,10)\r\n                                        ) : (\r\n                                            <i className = 'fas fa-times' style = {{ color: 'red'}} ></i>\r\n                                        )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                        {order.isDelivered ? (\r\n                                           order.deliveredAt.substring(0,10)\r\n                                        ) : (\r\n                                            <i className = 'fas fa-times' style = {{ color: 'red'}} ></i>\r\n                                        )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to = {`/order/${order._id}`}>\r\n                                                <Button variant = 'light' className = 'btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport emailjs from \"emailjs-com\";\r\n\r\n\r\n\r\n\r\n\r\nfunction NutritionistScreen() {\r\n\r\n    function sendEmail(e) {\r\n        e.preventDefault();\r\n\r\n    emailjs.sendForm('gmail', 'template_xda61uu', e.target, 'user_o6EfGPIavKB6feRQTLbwp')\r\n        .then((result) => {\r\n            console.log(result.text);\r\n        }, (error) => {\r\n            console.log(error.text);\r\n        });\r\n        e.target.reset()\r\n        alert('Message send!')\r\n    }\r\n\r\n    return(\r\n       <Container className ='mb-3'>\r\n       <div>\r\n       <div className = \"search-header\">\r\n        <h1 className = \"look-for\"> Nutrition Advice </h1>\r\n       </div>\r\n        <p className='text-center'>For more enquires, contact our nutritionist</p>\r\n       <div className=\"container\">\r\n       <form onSubmit={sendEmail}>\r\n               <div className=\"row pt-5 mx-auto\">\r\n                   <div className=\"col-8 form-group mx-auto\">\r\n                       <input type=\"text\" className=\"form-control\" placeholder=\"Name\" name=\"name\"/>\r\n                   </div>\r\n                   <div className=\"col-8 form-group pt-2 mx-auto\">\r\n                       <input type=\"email\" className=\"form-control\" placeholder=\"Email Address\" name=\"email\"/>\r\n                   </div>\r\n                   <div className=\"col-8 form-group pt-2 mx-auto\">\r\n                       <input type=\"text\" className=\"form-control\" placeholder=\"Subject\" name=\"subject\"/>\r\n                   </div>\r\n                   <div className=\"col-8 form-group pt-2 mx-auto\">\r\n                       <textarea className=\"form-control\" id=\"\" cols=\"30\" rows=\"8\" placeholder=\"Your message\" name=\"message\"></textarea>\r\n                   </div>\r\n                   <div className=\"col-8 pt-3 mx-auto\">\r\n                       <input type=\"submit\" className=\"btn\" value=\"Send Message\"></input>\r\n                   </div>\r\n               </div>\r\n           </form>\r\n       </div>\r\n   </div>\r\n       </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default NutritionistScreen;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    class BMIScreen extends React.Component {\r\n  \r\n        constructor(){\r\n          super();\r\n      \r\n          this.state = {\r\n            heightFeet: '',\r\n            heightInch: '',\r\n            weight: '',\r\n          }\r\n      \r\n          this.handleHeightFeetChange = this.handleHeightFeetChange.bind(this);\r\n          this.handleHeightInchChange = this.handleHeightInchChange.bind(this);\r\n          this.handleWeightChange = this.handleWeightChange.bind(this);\r\n          this.calculateBMI = this.calculateBMI.bind(this);\r\n        }\r\n      \r\n        handleHeightFeetChange(event){\r\n          this.setState({\r\n            heightFeet: event.target.value\r\n          });\r\n        }\r\n      \r\n        handleHeightInchChange(event){\r\n          this.setState({\r\n            heightInch: event.target.value\r\n          });\r\n        }  \r\n      \r\n        handleWeightChange(event){\r\n          this.setState({\r\n            weight: event.target.value\r\n          });\r\n        }\r\n      \r\n        calculateBMI(){\r\n          if (this.state.weight && this.state.heightFeet && this.state.heightInch){\r\n            // BMI Formula = (WEIGHT[in pounds] / (HEIGHT[in inches] * HEIGHT[in inches])) * 703;\r\n            let INCHES_IN_FEET = 12;\r\n      \r\n            var height = Number(this.state.heightFeet);\r\n                // convert feet to inches\r\n                height *= INCHES_IN_FEET;\r\n                // add the inches input field\r\n                height += Number(this.state.heightInch);\r\n      \r\n            let weight = this.state.weight;\r\n      \r\n            var bmi = (weight / (height * height)) * 703;\r\n                bmi = bmi.toFixed(2);\r\n      \r\n            return bmi;\r\n          }\r\n        }\r\n      \r\n        getBMIResults(bmi){\r\n          let bmiResults = {\r\n            label: '',\r\n            alertClass: '',\r\n          };\r\n          \r\n          if (bmi <= 18.5){\r\n            bmiResults.label = 'Underweight';\r\n            bmiResults.alertClass = 'alert-danger';\r\n          } \r\n          else if (bmi <= 24.9) {\r\n            bmiResults.label = 'Normal weight';\r\n            bmiResults.alertClass = 'alert-success';\r\n          }\r\n          else if (bmi <= 29.9){\r\n            bmiResults.label = 'Overweight';\r\n            bmiResults.alertClass = 'alert-warning';\r\n          }\r\n          else if (bmi >= 30) {\r\n            bmiResults.label = 'Obesity';\r\n            bmiResults.alertClass = 'alert-danger';\r\n          } else {\r\n            bmiResults.label = 'BMI';\r\n            bmiResults.alertClass = 'alert-primary';\r\n          }\r\n      \r\n          return bmiResults;\r\n        }\r\n      \r\n        render() {\r\n      \r\n          let bmi = this.calculateBMI();\r\n          let results = this.getBMIResults(bmi);\r\n      \r\n          return (\r\n            <div>\r\n                <div>\r\n                <div className = \"search-header\">\r\n                <h1 className = \"look-for\"> BMI Calculator </h1>\r\n              </div>\r\n                  <p>Enter your weight and height below.</p>\r\n                </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                  <form>\r\n                    <div className=\"form-group\">\r\n                      <legend>Weight</legend>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-xs-12\">\r\n                          <input className=\"form-control\" id=\"bmiWeight\" type=\"number\" min=\"1\" max=\"1000\" value={ this.state.weight } onChange={ this.handleWeightChange } />\r\n                          <label className=\"control-label\" htmlFor=\"bmiWeight\">lb</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n      \r\n                    <div className=\"form-group\">\r\n                      <legend>Height</legend>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-xs-6\">\r\n                          <input className=\"form-control\" id=\"bmiHeightFeet\" type=\"number\" min=\"1\" max=\"12\" value={ this.state.heightFeet } onChange={ this.handleHeightFeetChange } />\r\n                          <label className=\"control-label\" htmlFor=\"bmiHeightFeet\">ft</label>\r\n                        </div>\r\n                        <div className=\"col-xs-6\">\r\n                          <input className=\"form-control\" id=\"bmiHeightInch\" type=\"number\" min=\"0\" max=\"12\" value={ this.state.heightInch } onChange={ this.handleHeightInchChange } />\r\n                          <label className=\"control-label\" htmlFor=\"bmiHeightInch\">in</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n      \r\n                <div className=\"col-sm-6\">\r\n                  <BmiDisplay bmi={bmi} label={results.label} alertClass={results.alertClass} />\r\n                </div>\r\n      \r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      \r\n      function BmiDisplay(props){\r\n        return (\r\n          <div className={\"bmi-result alert \" + props.alertClass}>\r\n            <div>{ props.bmi || '--.-' }</div>\r\n            <div>{ props.label }</div>\r\n          </div> \r\n        )\r\n      }\r\n\r\n    \r\n\r\n\r\nexport default BMIScreen;","import React, { Component } from 'react'\r\nimport { Container } from 'react-bootstrap';\r\nimport '../styles/bmr.css';\r\n\r\nclass BMRScreen extends Component {\r\n\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            gender: '',\r\n            weight: '',\r\n            age:'',\r\n            heightfeet: '',\r\n            heightinches: '',\r\n            activity:'',\r\n            bmr: '',\r\n            error: '',\r\n            flag: false,\r\n            system: ''\r\n        }\r\n\r\n    }\r\n\r\n    handleAgeChange= (event) => {\r\n\r\n        this.setState({age:event.target.value });\r\n    }\r\n    handleWeightChange= (event) => {\r\n\r\n        this.setState({weight:event.target.value });\r\n    }\r\n    handleHeightFeetChange= (event) => {\r\n\r\n        this.setState({heightfeet:event.target.value });\r\n    }\r\n    handleHeightInchesChange= (event) => {\r\n\r\n        this.setState({heightinches:event.target.value });\r\n    }\r\n    handleGenderChange= (event) => {\r\n\r\n        this.setState({gender:event.target.value });\r\n    }\r\n    handleActivityChange= (event) => {\r\n\r\n        this.setState({activity:event.target.value });\r\n    }\r\n    handleSystemChange= (event) => {\r\n\r\n        this.setState({system:event.target.value });\r\n    }\r\n\r\n    calculateBMR() {\r\n\r\n\r\n        let age = this.state.age;\r\n        let weight = this.state.weight;\r\n        let heightFeet = this.state.heightfeet;  //will be used as height in CM for metric system\r\n        let heightInches= this.state.heightinches;\r\n        let gender = this.state.gender;\r\n        \r\n        if(this.state.system ==1)\r\n        {\r\n            if(age == '' || weight == '' || gender == '' || heightFeet == '' || heightInches == '')\r\n            {\r\n                this.setState({error: 'All fields are required'});\r\n                return;\r\n            }\r\n        }\r\n        else if(this.state.system ==2)\r\n        {   if(age == '' || weight == '' || gender == '' || heightFeet == '')\r\n        {\r\n            this.setState({error: 'All fields are required'});\r\n            return;\r\n        }\r\n\r\n        }\r\n\r\n\r\n\r\n        var bmrCalc = '';\r\n        if(this.state.system==1)\r\n        {\r\n        let height = ( (heightFeet * 30.48) + (heightInches*2.54) );\r\n        if(gender == 1) //Female\r\n        {  bmrCalc = 655.1 + ( 4.35 * weight ) + ( 4.7 * height ) - ( 4.7 * age ) }\r\n        else if (gender == 2) //Male\r\n        {  bmrCalc=  66 + ( 6.2 * weight ) + ( 12.7 * height) - ( 6.76 * age )  }\r\n        }\r\n        /*BMR calculation (Metric): \r\nMan BMR = 66.5 + ( 13.75 × weight in kg ) + ( 5.003 × height in cm ) – ( 6.755 × age in years )\r\nWoman BMR = BMR = 655 + ( 9.563 × weight in kg ) + ( 1.850 × height in cm ) – ( 4.676 × age in years )*/ \r\n        else if(this.state.system ==2)\r\n        {\r\n            if(gender == 1) //Female\r\n            {  bmrCalc = 655 + ( 9.563 * weight ) + ( 1.850 * heightFeet ) - ( 4.676 * age ) }\r\n            else if (gender == 2) //Male\r\n            {  bmrCalc=  66.5 + ( 13.75 * weight) + ( 5.003 * heightFeet) - ( 6.755 * age )  }\r\n                 \r\n\r\n        }\r\n\r\n        this.setState({bmr:bmrCalc});\r\n        this.setState({flag:true});\r\n        this.setState({error: ''});\r\n    }\r\n\r\n    calculateAct() {\r\n        let ActCalc;\r\n\r\n        \r\n        if (this.state.activity == '1.2')\r\n        {  ActCalc = this.state.bmr * 1.2;}\r\n        else if(this.state.activity == '1.375') \r\n        {ActCalc = this.state.bmr * 1.375;}\r\n        else if(this.state.activity == '1.55') \r\n        {ActCalc = this.state.bmr * 1.55;}\r\n        else if(this.state.activity == '1.725') \r\n        {ActCalc = this.state.bmr * 1.725;}\r\n        else if(this.state.activity == '1.9') \r\n        {ActCalc = this.state.bmr * 1.9;}\r\n        this.setState({activity:ActCalc});\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let error;\r\n        if(this.state.error)\r\n        {error= <div className='error' >{this.state.error} </div>}\r\n        let result;\r\n        if(this.state.bmr)\r\n        {result = <div className=\"result\">{this.state.bmr}</div>}\r\n        \r\n        let resultAct;\r\n        if(this.state.bmr)\r\n        {resultAct = <div className=\"result\">{this.state.activity}</div>}\r\n            \r\n            \r\n            \r\n               \r\n            if(this.state.flag == true)\r\n        {\r\n            var a = true;\r\n\r\n        }\r\n        var b = true;\r\n        if(this.state.system == 2)\r\n        {\r\n            var b=false;\r\n        }\r\n\r\n        if(this.state.system == 1)\r\n        {\r\n            var ft = 'ft';\r\n            var inch = 'in';\r\n        }\r\n        \r\n        \r\n\r\n        return (\r\n            \r\n            <Container>\r\n            <div className = \"search-header\">\r\n        <h1 className = \"look-for\"> BMR &amp; Daily Calorie Calculator </h1>\r\n       </div>\r\n            \r\n            <div id=\"bmrcalc\">\r\n\r\n                <div className=\"form\">\r\n                <h4 className='text-center pb-5'>Choose your settings </h4>\r\n\r\n                    {error}\r\n                    <div className=\"inputwrap\">\r\n                        <label className=\"label\">Gender</label>\r\n                        <label><input  type=\"radio\" checked={this.state.gender === '1'} onChange={this.handleGenderChange} className=\"genderF\" name=\"gender\" value=\"1\" />Female</label>\r\n                        <label><input type=\"radio\" checked={this.state.gender === '2'} onChange={this.handleGenderChange} className=\"genderM\" name=\"gender\" value=\"2\" />Male</label>\r\n                    </div>\r\n                    <div className=\"inputwrap\">\r\n                        <label className=\"label\">System</label>\r\n                        <label><input type=\"radio\"  checked={this.state.system === '1'} onChange={this.handleSystemChange}  name=\"Imperial\" value=\"1\" />Imperial</label>\r\n                        \r\n                        <label><input type=\"radio\"  checked={this.state.system === '2'} onChange={this.handleSystemChange}  name=\"Metric\" value=\"2\" />Metric</label>\r\n                        \r\n                    </div>\r\n                    <div className=\"inputwrap\">\r\n                        <label className=\"label\">Weight (Pounds/Kg)</label>\r\n                        <input type=\"number\" value={this.state.weight} onChange={this.handleWeightChange} name=\"weight\" className=\"weight\" min=\"0\" max=\"999\" />\r\n                    </div>\r\n                    <div className=\"inputwrap\">\r\n                        <label className=\"label\">Height  (ft|inches /cm)</label>\r\n                        <input type=\"number\"  value={this.state.heightfeet} onChange={this.handleHeightFeetChange} name=\"heightFeet\" className=\"heightFeet\" min=\"0\" max=\"8\" />\r\n                        \r\n                       {b && <input type=\"number\" value={this.state.heightinches} onChange={this.handleHeightInchesChange} name=\"heightInches\" className=\"heightInches\" min=\"0\" max=\"11\" />} \r\n                    </div>\r\n                    <div className=\"inputwrap\">\r\n                        <label className=\"label\">Age</label>\r\n                        <input type=\"number\" value={this.state.age} onChange={this.handleAgeChange} className=\"age\" name=\"age\" min=\"0\" max=\"120\" />\r\n                    </div>\r\n                    <button type=\"button\" onClick={() => this.calculateBMR()}>Calculate BMR</button>\r\n                    {result}\r\n                    \r\n                    { a == true &&  <div className=\"workout\"> \r\n            \r\n            <div className=\"inputwrap\">\r\n                            <label className=\"label\">Workout in a Week</label>\r\n                            <select className=\"activity\" value={this.state.activity} onChange={this.handleActivityChange} name=\"activity\">\r\n                                <option value=\"\">Select your Activity</option>\r\n                                <option value=\"1.2\">Sedentary (Very little or no exercise, and desk job)</option>\r\n                                <option value=\"1.375\">Lightly Active (Light exercise 1 to 3 days per week)</option>\r\n                                <option value=\"1.55\">Moderately Active (Moderate exercise 3 to 5 days per week)</option>\r\n                                <option value=\"1.725\">Very Active (Heavy exercise 6 to 7 days per week)</option>\r\n                                <option value=\"1.9\">Extremely Active (Very intense exercise, and physical job, exercise multiple times per day)</option>\r\n                            </select>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => this.calculateAct()}>Calculate Calories</button>\r\n                        {resultAct}\r\n                    </div>}\r\n\r\n                   \r\n                </div>\r\n            </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BMRScreen;","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './styles/style.scss';\nimport Header from './components/header/header.component';\nimport Footer from './components/footer/footer.component';\n\nimport Recipies from './components/recipies/recipes'\nimport MainScreen from './screens/MainScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport NutritionistScreen from './screens/NutritionistScreen'\nimport BMIScreen from './screens/BMIScreen'\nimport BMRScreen from './screens/BMRScreen'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main className = \"py-3\" >\n        <Container>\n          <Route path = '/' component = {MainScreen} exact />\n          <Route path = '/login' component = {LoginScreen}/>\n          <Route path = '/recipies' component = {Recipies}/>\n          <Route path = '/bmi' component = {BMIScreen}/>\n          <Route path = '/bmr' component = {BMRScreen}/>\n          <Route path = '/nutritionist' component = {NutritionistScreen}/>\n          <Route path = '/offer' component = {HomeScreen}/>\n          <Route path = '/register' component = {RegisterScreen}/>\n          <Route path = '/profile' component = {ProfileScreen}/>\n          <Route path = '/shipping' component = {ShippingScreen}/>\n          <Route path = '/placeorder' component = {PlaceOrderScreen}/>\n          <Route path = '/order/:id' component = {OrderScreen}/>\n          <Route path = '/payment' component = {PaymentScreen}/>\n          <Route path = '/product/:id' component = {ProductScreen}/>\n          <Route path = '/cart/:id?' component = {CartScreen}/>\n\n          <Route path = '/admin/userlist' component = {UserListScreen}/>\n          <Route path = '/admin/user/:id/edit' component = {UserEditScreen}/>\n          <Route path = '/admin/productlist' component = {ProductListScreen}/>\n          <Route path = '/admin/product/:id/edit' component = {ProductEditScreen}/>\n          <Route path = '/admin/orderlist' component = {OrderListScreen}/>\n        </Container> \n    </main>\n    <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}